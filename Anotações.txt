Template strings em JavaScript: use duas crases. As template strings servem
para escrever uma string com as quebras de linha sem precisarmos de operadores
de concatenação, o que é útil para escrevermos HTML.

Rode "npm install" para instalar as dependências de package.json.

As views deste projeto vão ter 2 métodos: template (com o HTML) e update 
(que vai atualizar o objeto DOM referenciado no HTML ao construir a view).

O JavaScript permite a interpolação de strings (inserir placeholders em uma
string para posterior substituição). A interpolação é feita inserindo ${code}:
    template(model: Negociacoes): string {

        return `
            <table class="table table-hover table-bordered">
                <thead>
                    <tr>
                        <th>DATA</th>
                        <th>QUANTIDADE</th>
                        <th>VALOR</th>
                    </tr>
                </thead>
                <tbody>
                    ${model.lista().map(negociacao => {
                        return `
                            <tr>
                                <td>?</td>
                                <td>${negociacao.quantidade}</td>
                                <td>${negociacao.valor}</td>
                            </tr>
                        `;
                    }).join('')} 
                </tbody>
            </table>
        `;
    }

O método join depois de map serve para concatenar cada linha <tr> gerada pelo 
método map com uma string (que no exemplo é vazia).

A classe Intl contém métodos para internacionalização. Ela tem uma subclasse
chamada DateTimeFormat, que por padrão (construtor vazio) faz a formatação de 
acordo com a localização do usuário. Construído o DateTimeFormat, invocamos o
método format fornecendo como parâmetro a data que queremos formatar.

Offtopic: Intl.NumberFormat é uma classe para formatação de números. Bom para 
definir casas decimais. O primeiro parâmetro do constructor é locale: se ele 
for setado como undefined, o locale padrão é usado (no caso, 'pt-br'). Se for
definida a opção style currency no array do segundo parâmetro, 
obrigatoriamente precisa colocar a opção currency com o código de 3 letras.

Movemos os métodos template e update para a classe pai View. Mas isso dá erro
de compilação, porque na classe MensagemView os parâmetros são string, enquanto
na classe NegociacoesView os parâmetros são do tipo Negociacoes. A interface
não está uniforme ainda.
